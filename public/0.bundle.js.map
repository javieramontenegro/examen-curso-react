{"version":3,"sources":["webpack:///./src/components/Cards/Card.js","webpack:///./src/components/Cards/Cards.js","webpack:///./src/components/Cards/index.js","webpack:///./src/components/Common/Button.js"],"names":["Card","name","url","useState","pokeName","setPokeName","imgLoading","setImgLoading","imageUrl","setImageUrl","pokemonIndex","setPokemonIndex","useContext","CardsContext","doneFetch","console","log","useEffect","pokeIndex","split","length","maxWidth","display","Cards","cards","maxValue","setMaxValue","loadMore","slice","map","poke","index","propTypes","array","CardsList","Button","stats","func"],"mappings":"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","file":"0.bundle.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CardsContext } from \"../../context/CardsContext\";\r\nimport \"../../assets/css/styles.css\";\r\nimport Loading from \"../Common/loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ name, url }) => {\r\n  const [pokeName, setPokeName] = useState(\"\");\r\n  const [imgLoading, setImgLoading] = useState(true);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [pokemonIndex, setPokemonIndex] = useState(\"\");\r\n  const { doneFetch } = useContext(CardsContext);\r\n  //const { setPokemonIndex, pokemonIndex } = useContext(CardsContext);\r\n\r\n  console.log(\"poke index\", pokemonIndex);\r\n  useEffect(() => {\r\n    const pokeIndex = url.split(\"/\")[url.split(\"/\").length - 2];\r\n    //const imageUrl = `./sprites/pokemon/${pokemonIndex}.png`;\r\n    const imageUrl = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${pokeIndex}.png?raw=true`;\r\n    setImageUrl(imageUrl);\r\n    setPokeName(name);\r\n    setPokemonIndex(pokeIndex);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`pokemon/${pokemonIndex}`}\r\n        className=\" w-full h-auto m-4 back-poke\"\r\n        style={{ maxWidth: \"300px\" }}\r\n      >\r\n        <div className=\"w-full h-auto flex justify-between flex-col items-center img-card p-6\">\r\n          <div className=\"w-full h-auto flex justify-between\">\r\n            <h1 className=\"text-2xl font-bold\">#{pokemonIndex}</h1>\r\n          </div>\r\n          <h2 className=\"text-xl\">{pokeName}</h2>\r\n          {doneFetch ? null : <p>LOADING</p>}\r\n\r\n          <img\r\n            src={imageUrl}\r\n            className=\"w-full h-auto\"\r\n            style={{\r\n              maxWidth: \"150px\",\r\n              display: `${doneFetch ? \"block\" : \"none\"} `,\r\n            }}\r\n            alt={pokeName}\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport Card from \"./Card\";\r\nimport \"../../assets/css/styles.css\";\r\nimport Button from \"../Common/Button\";\r\n\r\nconst Cards = ({ cards }) => {\r\n  console.log(cards);\r\n  const [maxValue, setMaxValue] = useState(12);\r\n\r\n  const loadMore = () => {\r\n    setMaxValue(maxValue + maxValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <div className=\"flex flex-wrap justify-center w-full h-full\">\r\n          {cards.slice(0, maxValue).map((poke, index) => {\r\n            const { url, name } = poke;\r\n            return <Card name={name} url={url} key={index} />;\r\n          })}\r\n        </div>\r\n        <div className=\" w-full h-full flex justify-center my-8\">\r\n          {maxValue <= cards.length && <Button loadMore={loadMore} />}\r\n        </div>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nCards.propTypes = {\r\n  cards: propTypes.array,\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useContext } from \"react\";\r\nimport { CardsContext } from \"../../context/CardsContext\";\r\nimport Loading from \"../Common/loading\";\r\nimport Cards from \"./Cards\";\r\n\r\nimport \"../../assets/css/styles.css\";\r\nconst CardsList = () => {\r\n  const { doneFetch, cards } = useContext(CardsContext);\r\n\r\n  return (\r\n    <>\r\n      {doneFetch ? (\r\n        cards.length ? (\r\n          <>\r\n            <div className=\"w-full h-full flex flex-wrap justify-center px-6 md:px-20 pt-6\">\r\n              <Cards cards={cards} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>no result</p>\r\n        )\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardsList;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"../../assets/css/styles.css\";\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <button\r\n      className=\"w-full h-full text-xl  text-white btn-loading\"\r\n      onClick={() => loadMore()}\r\n    >\r\n      Cargar mas\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  stats: propTypes.func,\r\n};\r\n\r\nexport default Button;\r\n"],"sourceRoot":""}