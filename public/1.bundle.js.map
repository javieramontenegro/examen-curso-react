{"version":3,"sources":["webpack:///./src/components/Cards/Card.js","webpack:///./src/components/Common/Button.js","webpack:///./src/components/Cards/Cards.js","webpack:///./src/components/Cards/index.js"],"names":["Card","name","url","useState","pokeName","setPokeName","imageUrl","setImageUrl","pokemonIndex","setPokemonIndex","doneFetch","useContext","CardsContext","console","log","useEffect","pokeIndex","split","length","to","className","style","maxWidth","src","display","alt","loading","Button","loadMore","onClick","propTypes","stats","func","Cards","cards","maxValue","setMaxValue","slice","map","poke","index","key","array","CardsList"],"mappings":"+mCAMA,IAgDeA,EAhDF,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IAAU,IACEC,mBAAS,IADX,GACvBC,EADuB,KACbC,EADa,SAEMF,oBAAS,GAFf,kBAGEA,mBAAS,IAHX,IAGvBG,EAHuB,KAGbC,EAHa,SAIUJ,mBAAS,IAJnB,GAIvBK,EAJuB,KAITC,EAJS,KAKtBC,EAAcC,qBAAWC,KAAzBF,UAaR,OAVAG,QAAQC,IAAI,aAAcN,GAC1BO,qBAAU,WACR,IAAMC,EAAYd,EAAIe,MAAM,KAAKf,EAAIe,MAAM,KAAKC,OAAS,GAEnDZ,EAAW,kEAAH,OAAqEU,EAArE,iBACdT,EAAYD,GACZD,EAAYJ,GACZQ,EAAgBO,KACf,IAGD,oCACE,kBAAC,IAAD,CACEG,GAAE,kBAAaX,GACfY,UAAU,+BACVC,MAAO,CAAEC,SAAU,UAEnB,yBAAKF,UAAU,yEACb,yBAAKA,UAAU,sCACb,wBAAIA,UAAU,sBAAd,IAAqCZ,IAEvC,wBAAIY,UAAU,WAAWhB,GACxBM,EAAY,KAAO,sCAEpB,yBACEa,IAAKjB,EACLc,UAAU,gBACVC,MAAO,CACLC,SAAU,QACVE,QAAS,GAAF,OAAKd,EAAY,QAAU,OAA3B,MAETe,IAAKrB,EACLsB,QAAQ,aC3CdC,EAAS,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAChB,OACE,4BACER,UAAU,gDACVS,QAAS,kBAAMD,MAFjB,eASJD,EAAOG,UAAY,CACjBC,MAAOD,IAAUE,MAGJL,Q,u8BCZf,IAAMM,EAAQ,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACfrB,QAAQC,IAAIoB,GADe,QAEK/B,mBAAS,IAFd,GAEpBgC,EAFoB,KAEVC,EAFU,KAQ3B,OACE,oCACE,oCACE,yBAAKhB,UAAU,+CACZc,EAAMG,MAAM,EAAGF,GAAUG,KAAI,SAACC,EAAMC,GAAU,IACrCtC,EAAcqC,EAAdrC,IAAKD,EAASsC,EAATtC,KACb,OAAO,kBAAC,EAAD,CAAMA,KAAMA,EAAMC,IAAKA,EAAKuC,IAAKD,QAG5C,yBAAKpB,UAAU,2CACZe,GAAYD,EAAMhB,QAAU,kBAAC,EAAD,CAAQU,SAd5B,WACfQ,EAAYD,EAAWA,UAoB3BF,EAAMH,UAAY,CAChBI,MAAOJ,IAAUY,OAGJT,QCPAU,UAtBG,WAAM,MACOhC,qBAAWC,KAAhCF,EADc,EACdA,UAAWwB,EADG,EACHA,MAEnB,OACE,oCACGxB,EACCwB,EAAMhB,OACJ,oCACE,yBAAKE,UAAU,kEACb,kBAAC,EAAD,CAAOc,MAAOA,MAIlB,wCAGF,kBAAC,IAAD","file":"1.bundle.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CardsContext } from \"../../context/CardsContext\";\r\nimport \"../../assets/css/styles.css\";\r\nimport Loading from \"../Common/loading\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Card = ({ name, url }) => {\r\n  const [pokeName, setPokeName] = useState(\"\");\r\n  const [imgLoading, setImgLoading] = useState(true);\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [pokemonIndex, setPokemonIndex] = useState(\"\");\r\n  const { doneFetch } = useContext(CardsContext);\r\n  //const { setPokemonIndex, pokemonIndex } = useContext(CardsContext);\r\n\r\n  console.log(\"poke index\", pokemonIndex);\r\n  useEffect(() => {\r\n    const pokeIndex = url.split(\"/\")[url.split(\"/\").length - 2];\r\n    //const imageUrl = `./sprites/pokemon/${pokemonIndex}.png`;\r\n    const imageUrl = `https://github.com/PokeAPI/sprites/blob/master/sprites/pokemon/${pokeIndex}.png?raw=true`;\r\n    setImageUrl(imageUrl);\r\n    setPokeName(name);\r\n    setPokemonIndex(pokeIndex);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Link\r\n        to={`pokemon/${pokemonIndex}`}\r\n        className=\" w-full h-auto m-4 back-poke\"\r\n        style={{ maxWidth: \"300px\" }}\r\n      >\r\n        <div className=\"w-full h-auto flex justify-between flex-col items-center img-card p-6\">\r\n          <div className=\"w-full h-auto flex justify-between\">\r\n            <h1 className=\"text-2xl font-bold\">#{pokemonIndex}</h1>\r\n          </div>\r\n          <h2 className=\"text-xl\">{pokeName}</h2>\r\n          {doneFetch ? null : <p>LOADING</p>}\r\n\r\n          <img\r\n            src={imageUrl}\r\n            className=\"w-full h-auto\"\r\n            style={{\r\n              maxWidth: \"150px\",\r\n              display: `${doneFetch ? \"block\" : \"none\"} `,\r\n            }}\r\n            alt={pokeName}\r\n            loading=\"lazy\"\r\n          />\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"../../assets/css/styles.css\";\r\nconst Button = ({ loadMore }) => {\r\n  return (\r\n    <button\r\n      className=\"w-full h-full text-xl  text-white btn-loading\"\r\n      onClick={() => loadMore()}\r\n    >\r\n      Cargar mas\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  stats: propTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport Card from \"./Card\";\r\nimport \"../../assets/css/styles.css\";\r\nimport Button from \"../Common/Button\";\r\n\r\nconst Cards = ({ cards }) => {\r\n  console.log(cards);\r\n  const [maxValue, setMaxValue] = useState(12);\r\n\r\n  const loadMore = () => {\r\n    setMaxValue(maxValue + maxValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <div className=\"flex flex-wrap justify-center w-full h-full\">\r\n          {cards.slice(0, maxValue).map((poke, index) => {\r\n            const { url, name } = poke;\r\n            return <Card name={name} url={url} key={index} />;\r\n          })}\r\n        </div>\r\n        <div className=\" w-full h-full flex justify-center my-8\">\r\n          {maxValue <= cards.length && <Button loadMore={loadMore} />}\r\n        </div>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nCards.propTypes = {\r\n  cards: propTypes.array,\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useContext } from \"react\";\r\nimport { CardsContext } from \"../../context/CardsContext\";\r\nimport Loading from \"../Common/loading\";\r\nimport Cards from \"./Cards\";\r\n\r\nimport \"../../assets/css/styles.css\";\r\nconst CardsList = () => {\r\n  const { doneFetch, cards } = useContext(CardsContext);\r\n\r\n  return (\r\n    <>\r\n      {doneFetch ? (\r\n        cards.length ? (\r\n          <>\r\n            <div className=\"w-full h-full flex flex-wrap justify-center px-6 md:px-20 pt-6\">\r\n              <Cards cards={cards} />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>no result</p>\r\n        )\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardsList;\r\n"],"sourceRoot":""}